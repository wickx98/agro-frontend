{"ast":null,"code":"import _toConsumableArray from\"C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{Link}from'react-router-dom';import Message from'./../../components/Message/Message';import{addToCart,removeFromCart}from'./../../actions/cartActions';import{Row,Col,ListGroup,Image,Button,Form,Container,Card}from'react-bootstrap';import Meta from'../../components/Helmet/Meta';var Cart=function Cart(_ref){var match=_ref.match,location=_ref.location,history=_ref.history;var productId=match.params.id;var qty=location.search?Number(location.search.split('=')[1]):1;var dispatch=useDispatch();var cartSeed=useSelector(function(state){return state.cartSeed;});var cartItems=cartSeed.cartItems;useEffect(function(){if(productId){dispatch(addToCart(productId,qty));}},[dispatch,productId,qty]);var removeFromCartHandler=function removeFromCartHandler(id){dispatch(removeFromCart(id));};var checkoutHandler=function checkoutHandler(){history.push('/login?redirect=shipping');};return/*#__PURE__*/_jsxs(Container,{style:{marginTop:'100px',marginBottom:'50px'},children:[/*#__PURE__*/_jsx(Meta,{title:\"Agrocare | Cart\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:8,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Shopping Cart\"}),cartItems.length===0?/*#__PURE__*/_jsxs(Message,{variant:\"danger\",children:[\"Your cart is empty \",/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"GO BACK\"})]}):/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:cartItems.map(function(item){return/*#__PURE__*/_jsx(ListGroup.Item,{style:{marginTop:'10px'},children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:2,children:/*#__PURE__*/_jsx(Image,{src:item.image,alt:item.name,fluid:true,rounded:true})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Link,{to:\"/farmers/purchaseSeeds/\".concat(item.seed),children:item.name})}),/*#__PURE__*/_jsxs(Col,{md:2,children:[\"RS.\",item.price]}),/*#__PURE__*/_jsx(Col,{md:2,children:/*#__PURE__*/_jsx(Form.Control,{as:\"select\",value:item.qty,onChange:function onChange(e){return dispatch(addToCart(item.seed,Number(e.target.value)));},children:_toConsumableArray(Array(item.countInStock).keys()).map(function(x){return/*#__PURE__*/_jsx(\"option\",{value:x+1,children:x+1},x+1);})})}),/*#__PURE__*/_jsx(Col,{md:2,children:/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"light\",onClick:function onClick(){return removeFromCartHandler(item.seed);},children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"})})})]})},item.seed);})})]}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{style:{marginTop:'50px'},children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Subtotal (\",cartItems.reduce(function(acc,item){return acc+item.qty;},0),\") items\"]}),\"RS.\",cartItems.reduce(function(acc,item){return acc+item.qty*item.price;},0).toFixed(2)]}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"button\",className:\"btn-block\",disabled:cartItems.length===0,onClick:checkoutHandler,children:\"Proceed To Checkout\"})})]})})})]})]});};export default Cart;","map":{"version":3,"sources":["C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/src/screens/Cart/Cart.jsx"],"names":["React","useEffect","useDispatch","useSelector","Link","Message","addToCart","removeFromCart","Row","Col","ListGroup","Image","Button","Form","Container","Card","Meta","Cart","match","location","history","productId","params","id","qty","search","Number","split","dispatch","cartSeed","state","cartItems","removeFromCartHandler","checkoutHandler","push","marginTop","marginBottom","length","map","item","image","name","seed","price","e","target","value","Array","countInStock","keys","x","reduce","acc","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Message from './../../components/Message/Message';\nimport { addToCart, removeFromCart } from './../../actions/cartActions'\nimport { Row, Col, ListGroup, Image, Button, Form, Container, Card } from 'react-bootstrap';\nimport Meta from '../../components/Helmet/Meta';\n\nconst Cart = ({ match, location, history }) => {\n\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n\n    const cartSeed = useSelector((state) => state.cartSeed)\n    const { cartItems } = cartSeed\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Container style={{ marginTop: '100px', marginBottom: '50px' }}>\n            <Meta\n                title=\"Agrocare | Cart\"\n            />\n            <Row>\n                <Col md={8}>\n                    <h1>Shopping Cart</h1>\n                    {\n                        cartItems.length === 0 ? (\n                            <Message variant='danger'>\n                                Your cart is empty <Link to='/'>GO BACK</Link>\n                            </Message>\n                        ) : (\n                                <ListGroup variant='flush' >\n                                    {cartItems.map((item) => (\n                                        <ListGroup.Item key={item.seed} style={{ marginTop: '10px' }}>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col md={3}>\n                                                    <Link to={`/farmers/purchaseSeeds/${item.seed}`}>{item.name}</Link>\n                                                </Col>\n                                                <Col md={2}>RS.{item.price}</Col>\n                                                <Col md={2}>\n                                                    <Form.Control\n                                                        as='select'\n                                                        value={item.qty}\n                                                        onChange={(e) =>\n                                                            dispatch(\n                                                                addToCart(item.seed, Number(e.target.value))\n                                                            )\n                                                        }\n                                                    >\n                                                        {[...Array(item.countInStock).keys()].map((x) => (\n                                                            <option key={x + 1} value={x + 1}>\n                                                                {x + 1}\n                                                            </option>\n                                                        ))}\n                                                    </Form.Control>\n                                                </Col>\n                                                <Col md={2}>\n                                                    <Button\n                                                        type='button'\n                                                        variant='light'\n                                                        onClick={() => removeFromCartHandler(item.seed)}\n                                                    >\n                                                        <i className='fas fa-trash'></i>\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                </Col>\n                <Col md={4}>\n                    <Card style={{ marginTop: '50px' }}>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                                RS.{cartItems\n                                    .reduce((acc, item) => acc + item.qty * item.price, 0)\n                                    .toFixed(2)}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cartItems.length === 0}\n                                    onClick={checkoutHandler}\n                                >\n                                    Proceed To Checkout\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}