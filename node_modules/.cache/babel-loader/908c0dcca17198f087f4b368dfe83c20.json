{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_SEED_LIST_REQUEST, PRODUCT_SEED_LIST_SUCCESS, PRODUCT_SEED_LIST_FAIL, PRODUCT_SEED_DETAILS_REQUEST, PRODUCT_SEED_DETAILS_SUCCESS, PRODUCT_SEED_DETAILS_FAIL, SEED_DELETE_REQUEST, SEED_DELETE_SUCCESS, SEED_DELETE_FAIL, SEED_CREATE_REQUEST, SEED_CREATE_SUCCESS, SEED_CREATE_FAIL, SEED_UPDATE_REQUEST, SEED_UPDATE_FAIL, SEED_UPDATE_SUCCESS, SEED_UPDATE_RESET, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL } from './../constants/productConstants.js';\nimport { logout } from './userActions';\nexport const listSeedProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_SEED_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/seeds');\n    dispatch({\n      type: PRODUCT_SEED_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SEED_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listSeedProductsDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_SEED_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/seeds/${id}`);\n    dispatch({\n      type: PRODUCT_SEED_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SEED_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteSeedProducts = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SEED_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/seeds/${id}`, config);\n    dispatch({\n      type: SEED_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: SEED_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createSeedProducts = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SEED_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/seeds`, {}, config);\n    dispatch({\n      type: SEED_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SEED_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateSeedProducts = seed => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SEED_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/seeds/${seed._id}`, seed, config);\n    dispatch({\n      type: SEED_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: SEED_UPDATE_RESET\n    });\n  } catch (error) {\n    dispatch({\n      type: SEED_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/seeds/${productId}/reviews`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["E:/web site/web-cw-main/web-cw-main/web-cw-main/frontend/src/actions/productSeedActions.js"],"names":["axios","PRODUCT_SEED_LIST_REQUEST","PRODUCT_SEED_LIST_SUCCESS","PRODUCT_SEED_LIST_FAIL","PRODUCT_SEED_DETAILS_REQUEST","PRODUCT_SEED_DETAILS_SUCCESS","PRODUCT_SEED_DETAILS_FAIL","SEED_DELETE_REQUEST","SEED_DELETE_SUCCESS","SEED_DELETE_FAIL","SEED_CREATE_REQUEST","SEED_CREATE_SUCCESS","SEED_CREATE_FAIL","SEED_UPDATE_REQUEST","SEED_UPDATE_FAIL","SEED_UPDATE_SUCCESS","SEED_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","logout","listSeedProducts","dispatch","type","data","get","payload","error","response","message","listSeedProductsDetails","id","deleteSeedProducts","getState","userLogin","userInfo","config","headers","Authorization","token","delete","createSeedProducts","post","updateSeedProducts","seed","put","_id","createProductReview","productId","review"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n    PRODUCT_SEED_LIST_REQUEST,\n    PRODUCT_SEED_LIST_SUCCESS,\n    PRODUCT_SEED_LIST_FAIL,\n    PRODUCT_SEED_DETAILS_REQUEST,\n    PRODUCT_SEED_DETAILS_SUCCESS,\n    PRODUCT_SEED_DETAILS_FAIL,\n    SEED_DELETE_REQUEST,\n    SEED_DELETE_SUCCESS,\n    SEED_DELETE_FAIL,\n    SEED_CREATE_REQUEST,\n    SEED_CREATE_SUCCESS,\n    SEED_CREATE_FAIL,\n    SEED_UPDATE_REQUEST,\n    SEED_UPDATE_FAIL,\n    SEED_UPDATE_SUCCESS,\n    SEED_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL\n} from './../constants/productConstants.js'\nimport { logout } from './userActions'\n\nexport const listSeedProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_SEED_LIST_REQUEST })\n\n        const { data } = await axios.get('/api/seeds')\n\n        dispatch({\n            type: PRODUCT_SEED_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_SEED_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const listSeedProductsDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_SEED_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/seeds/${id}`)\n\n        dispatch({\n            type: PRODUCT_SEED_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_SEED_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const deleteSeedProducts = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: SEED_DELETE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        await axios.delete(`/api/seeds/${id}`, config)\n\n        dispatch({\n            type: SEED_DELETE_SUCCESS,\n        })\n    } catch (error) {\n        dispatch({\n            type: SEED_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const createSeedProducts = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: SEED_CREATE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.post(`/api/seeds`, {}, config)\n\n        dispatch({\n            type: SEED_CREATE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: SEED_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const updateSeedProducts = (seed) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: SEED_UPDATE_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/seeds/${seed._id}`, seed, config)\n\n        dispatch({\n            type: SEED_UPDATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({ type: SEED_UPDATE_RESET })\n\n    } catch (error) {\n        dispatch({\n            type: SEED_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (\n    dispatch,\n    getState\n  ) => {\n    try {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      await axios.post(`/api/seeds/${productId}/reviews`, review, config)\n  \n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\n      })\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n      }\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload: message,\n      })\n    }\n  }"]},"metadata":{},"sourceType":"module"}