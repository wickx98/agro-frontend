{"ast":null,"code":"import _slicedToArray from\"C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../../components/Message/Message';import Loader from'../../components/Loader/Loader';import FormContainer from'../../components/FormContainer/FormContainer';import{getUserDetails,updateUser}from'../../actions/userActions';import{USER_UPDATE_RESET}from'./../../constants/userConstants';import Meta from'../../components/Helmet/Meta';var UserEditScreen=function UserEditScreen(_ref){var match=_ref.match,history=_ref.history;var userId=match.params.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),cropSelection=_useState6[0],setCropSelection=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isAdmin=_useState8[0],setIsAdmin=_useState8[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,user=userDetails.user,error=userDetails.error;var userUpdate=useSelector(function(state){return state.userUpdate;});var loadingUpdate=userUpdate.loading,successUpdate=userUpdate.success,errorUpdate=userUpdate.error;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push('/admin/userList');}else{if(!user.name||user._id!==userId){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setCropSelection(user.cropSelection);setIsAdmin(user.isAdmin);}}},[user,userId,dispatch,successUpdate,history]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:userId,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Meta,{title:\"Agrocare | Admin User Edit\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{style:{marginTop:'120px'},children:\"Edit User\"}),/*#__PURE__*/_jsx(Link,{to:\"/admin/userList\",className:\"btn btn-light my-2\",children:\"GO BACK\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,style:{marginBottom:'50px'},children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Name \",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,required:true,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Email Address / NIC \",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"nic\",placeholder:\"Enter email or NIC\",value:email,required:true,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"cropSelection\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Crop Selection (optional)\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"cropSelection\",placeholder:\"Enter crop               \",value:cropSelection,onChange:function onChange(e){return setCropSelection(e.target.value);}})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isAdmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",value:isAdmin,checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})]});};export default UserEditScreen;","map":{"version":3,"sources":["C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/src/screens/UserEdit/UserEditScreen.jsx"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","Meta","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","cropSelection","setCropSelection","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","user","error","userUpdate","loadingUpdate","successUpdate","success","errorUpdate","type","push","_id","submitHandler","e","preventDefault","marginTop","marginBottom","color","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n    Form,\n    Button,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../../components/Message/Message'\nimport Loader from '../../components/Loader/Loader'\nimport FormContainer from '../../components/FormContainer/FormContainer'\nimport { getUserDetails, updateUser } from '../../actions/userActions'\nimport { USER_UPDATE_RESET } from './../../constants/userConstants'\nimport Meta from '../../components/Helmet/Meta'\n\nconst UserEditScreen = ({ match, history }) => {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [cropSelection, setCropSelection] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, user, error } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { loading: loadingUpdate, success: successUpdate, error: errorUpdate } = userUpdate\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userList')\n        } else {\n            if (!user.name || user._id !== userId) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setCropSelection(user.cropSelection)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n    }, [user, userId, dispatch, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n    }\n\n    return (\n        <>\n            <Meta\n                title=\"Agrocare | Admin User Edit\"\n            />\n            <FormContainer>\n                <h1 style={{ marginTop: '120px' }}>Edit User</h1>\n                <Link to='/admin/userList' className=\"btn btn-light my-2\">GO BACK</Link>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler} style={{ marginBottom: '50px' }}>\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\n                                <Form.Control\n                                    type=\"name\"\n                                    placeholder=\"Enter name\"\n                                    value={name}\n                                    required\n                                    onChange={(e) => setName(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address / NIC <span style={{ color: 'red' }}>*</span></Form.Label>\n                                <Form.Control\n                                    type=\"nic\"\n                                    placeholder=\"Enter email or NIC\"\n                                    value={email}\n                                    required\n                                    onChange={(e) => setEmail(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='cropSelection'>\n                                <Form.Label>Crop Selection (optional)</Form.Label>\n                                <Form.Control\n                                    type=\"cropSelection\"\n                                    placeholder=\"Enter crop               \"\n                                    value={cropSelection}\n                                    onChange={(e) => setCropSelection(e.target.value)}\n                                ></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='isAdmin'>\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label=\"Is Admin\"\n                                    value={isAdmin}\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                ></Form.Check>\n                            </Form.Group>\n                            <Button type=\"submit\" variant=\"primary\">Update</Button>\n                        </Form>\n                    )\n                }\n            </FormContainer>\n        </>\n    )\n}\n\nexport default UserEditScreen\n"]},"metadata":{},"sourceType":"module"}