{"ast":null,"code":"import _slicedToArray from\"C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import CheckoutSteps from'./../../components/CheckoutSteps/CheckoutSteps';import FormContainer from'../../components/FormContainer/FormContainer';import{savePaymentMethod}from'./../../actions/cartActions.js';import Meta from'../../components/Helmet/Meta';var PaymentScreen=function PaymentScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cartSeed;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){history.push('/shipping');}var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'100px'},children:/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(Meta,{title:\"Agrocare | Payment\"}),/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,style:{marginBottom:'40px'},children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Paypal or Credit Card\",id:\"paypal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}}),/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Stripe\",id:\"Stripe\",name:\"paymentMethod\",value:\"Stripe\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})]})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Continue\"})]})]})});};export default PaymentScreen;","map":{"version":3,"sources":["C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/src/screens/Payment/PaymentMethodScreen.jsx"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","CheckoutSteps","FormContainer","savePaymentMethod","Meta","PaymentScreen","history","cart","state","cartSeed","shippingAddress","push","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","marginTop","marginBottom","target","value"],"mappings":"sRAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACIC,IADJ,CAEIC,MAFJ,CAGIC,GAHJ,KAIO,iBAJP,CAKA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,gDAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,8CAA1B,CACA,OAASC,iBAAT,KAAkC,gCAAlC,CACA,MAAOC,CAAAA,IAAP,KAAiB,8BAAjB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAEnC,GAAMC,CAAAA,IAAI,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAV,EAAN,CAAxB,CAFmC,GAG3BC,CAAAA,eAH2B,CAGPH,IAHO,CAG3BG,eAH2B,CAKnC,GAAI,CAACA,eAAL,CAAsB,CAClBJ,OAAO,CAACK,IAAR,CAAa,WAAb,EACH,CAPkC,cASOhB,QAAQ,CAAC,QAAD,CATf,wCAS5BiB,aAT4B,eASbC,gBATa,eAWnC,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CAEA,GAAMgB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GACAH,QAAQ,CAACX,iBAAiB,CAACS,aAAD,CAAlB,CAAR,CACAN,OAAO,CAACK,IAAR,CAAa,aAAb,EACH,CAJD,CAMA,mBACI,YAAK,KAAK,CAAE,CAAEO,SAAS,CAAE,OAAb,CAAZ,uBACI,MAAC,aAAD,yBACI,KAAC,IAAD,EACI,KAAK,CAAC,oBADV,EADJ,cAII,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EAJJ,cAKI,sCALJ,cAMI,MAAC,IAAD,EAAM,QAAQ,CAAEH,aAAhB,CAA+B,KAAK,CAAE,CAAEI,YAAY,CAAE,MAAhB,CAAtC,wBACI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADJ,cAGI,MAAC,GAAD,yBACI,KAAC,IAAD,CAAM,KAAN,EACI,IAAI,CAAC,OADT,CAEI,KAAK,CAAC,uBAFV,CAGI,EAAE,CAAC,QAHP,CAII,IAAI,CAAC,eAJT,CAKI,KAAK,CAAC,QALV,CAMI,OAAO,KANX,CAOI,QAAQ,CAAE,kBAACH,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACI,MAAF,CAASC,KAAV,CAAvB,EAPd,EADJ,cAUI,KAAC,IAAD,CAAM,KAAN,EACI,IAAI,CAAC,OADT,CAEI,KAAK,CAAC,QAFV,CAGI,EAAE,CAAC,QAHP,CAII,IAAI,CAAC,eAJT,CAKI,KAAK,CAAC,QALV,CAMI,OAAO,KANX,CAOI,QAAQ,CAAE,kBAACL,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACI,MAAF,CAASC,KAAV,CAAvB,EAPd,EAVJ,GAHJ,GADJ,cAyBI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,sBAzBJ,GANJ,GADJ,EADJ,CAsCH,CAzDD,CA2DA,cAAehB,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport {\n    Form,\n    Button,\n    Col,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CheckoutSteps from './../../components/CheckoutSteps/CheckoutSteps'\nimport FormContainer from '../../components/FormContainer/FormContainer'\nimport { savePaymentMethod } from './../../actions/cartActions.js'\nimport Meta from '../../components/Helmet/Meta'\n\nconst PaymentScreen = ({ history }) => {\n\n    const cart = useSelector(state => state.cartSeed)\n    const { shippingAddress } = cart\n\n    if (!shippingAddress) {\n        history.push('/shipping')\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <div style={{ marginTop: '100px' }}>\n            <FormContainer>\n                <Meta\n                    title=\"Agrocare | Payment\"\n                />\n                <CheckoutSteps step1 step2 step3 />\n                <h1>Payment Method</h1>\n                <Form onSubmit={submitHandler} style={{ marginBottom: '40px' }}>\n                    <Form.Group>\n                        <Form.Label as='legend'>Select Method</Form.Label>\n\n                        <Col>\n                            <Form.Check\n                                type='radio'\n                                label='Paypal or Credit Card'\n                                id='paypal'\n                                name='paymentMethod'\n                                value='PayPal'\n                                checked\n                                onChange={(e) => setPaymentMethod(e.target.value)}\n                            ></Form.Check>\n                            <Form.Check\n                                type='radio'\n                                label='Stripe'\n                                id='Stripe'\n                                name='paymentMethod'\n                                value='Stripe'\n                                checked\n                                onChange={(e) => setPaymentMethod(e.target.value)}\n                            ></Form.Check>\n                        </Col>\n                    </Form.Group>\n                    <Button type='submit'>Continue</Button>\n                </Form>\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default PaymentScreen\n"]},"metadata":{},"sourceType":"module"}