{"ast":null,"code":"import _slicedToArray from\"C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from'react';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import CheckoutSteps from'./../../components/CheckoutSteps/CheckoutSteps';import FormContainer from'../../components/FormContainer/FormContainer';import{saveShippingAddress}from'./../../actions/cartActions.js';import Meta from'../../components/Helmet/Meta';var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cartSeed;});var shippingAddress=cart.shippingAddress;var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));history.push('/payment');};return/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'100px'},children:/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(Meta,{title:\"Agrocare | Shipping\"}),/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,style:{marginBottom:'40px'},children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"address\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Address \",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter address\",value:address,required:true,onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"city\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"City \",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter City\",value:city,required:true,onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"postalCode\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Postal Code \",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter postal code\",value:postalCode,required:true,onChange:function onChange(e){return setPostalCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"country\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Country \",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter Country\",value:country,required:true,onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Continue\"})]})]})});};export default ShippingScreen;","map":{"version":3,"sources":["C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/src/screens/Shipping/ShippingScreen.jsx"],"names":["React","useState","Form","Button","useDispatch","useSelector","CheckoutSteps","FormContainer","saveShippingAddress","Meta","ShippingScreen","history","cart","state","cartSeed","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","push","marginTop","marginBottom","color","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {\n    Form,\n    Button,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CheckoutSteps from './../../components/CheckoutSteps/CheckoutSteps'\nimport FormContainer from '../../components/FormContainer/FormContainer'\nimport { saveShippingAddress } from './../../actions/cartActions.js'\nimport Meta from '../../components/Helmet/Meta'\n\nconst ShippingScreen = ({ history }) => {\n\n    const cart = useSelector(state => state.cartSeed)\n    const { shippingAddress } = cart\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <div style={{ marginTop: '100px' }}>\n            <FormContainer>\n                <Meta\n                    title=\"Agrocare | Shipping\"\n                />\n                <CheckoutSteps step1 step2 />\n                <h1>Shipping</h1>\n                <Form onSubmit={submitHandler} style={{ marginBottom: '40px' }}>\n                    <Form.Group controlId='address'>\n                        <Form.Label>Address <span style={{ color: 'red' }}>*</span></Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter address\"\n                            value={address}\n                            required\n                            onChange={(e) => setAddress(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='city'>\n                        <Form.Label>City <span style={{ color: 'red' }}>*</span></Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter City\"\n                            value={city}\n                            required\n                            onChange={(e) => setCity(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='postalCode'>\n                        <Form.Label>Postal Code <span style={{ color: 'red' }}>*</span></Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter postal code\"\n                            value={postalCode}\n                            required\n                            onChange={(e) => setPostalCode(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='country'>\n                        <Form.Label>Country <span style={{ color: 'red' }}>*</span></Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Country\"\n                            value={country}\n                            required\n                            onChange={(e) => setCountry(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Button type='submit'>Continue</Button>\n                </Form>\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default ShippingScreen\n"]},"metadata":{},"sourceType":"module"}