{"ast":null,"code":"import _slicedToArray from\"C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect,useState}from'react';import{useHistory}from\"react-router-dom\";import{useDispatch,useSelector}from'react-redux';import{Image}from'react-bootstrap';import{GoogleMap,withScriptjs,withGoogleMap,Marker,InfoWindow}from'react-google-maps';import Message from'../../Message/Message';import Loader from'../../Loader/Loader';import{listSupplierProducts}from'../../../actions/supplierProduct';import MapStyles from'./MapStyles';import Rating from'./Rating/Rating';var Map=function Map(){var dispatch=useDispatch();var history=useHistory();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedPlace=_useState2[0],setSelectedPlace=_useState2[1];var supplierProductList=useSelector(function(state){return state.supplierProductList;});var loadingProducts=supplierProductList.loading,errorProducts=supplierProductList.error,products=supplierProductList.products;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;useEffect(function(){if(!userInfo.isAdmin&&!userInfo){history.push('/login');}else{dispatch(listSupplierProducts());}},[dispatch,history,userInfo]);return/*#__PURE__*/_jsxs(GoogleMap,{defaultCenter:{lat:6.927079,lng:79.861244},defaultZoom:10,defaultOptions:{styles:MapStyles},children:[loadingProducts?/*#__PURE__*/_jsx(Loader,{}):errorProducts?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorProducts}):products.map(function(place){return/*#__PURE__*/_jsx(Marker,{position:{lat:place.latitude,lng:place.longitude},onClick:function onClick(){setSelectedPlace(place);},icon:{url:'/mapIcon.svg',scaledSize:new window.google.maps.Size(25,25)}},place._id);}),selectedPlace&&/*#__PURE__*/_jsx(InfoWindow,{position:{lat:selectedPlace.latitude,lng:selectedPlace.longitude},onCloseClick:function onCloseClick(){setSelectedPlace(null);},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Image,{className:\"mx-auto d-block img-fluid mb-1\",rounded:true,width:\"120px\",src:selectedPlace.image,alt:selectedPlace.name}),/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:\"center\"},children:selectedPlace.cropSelection}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Farmer: \",/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:\"bold\"},children:selectedPlace.name}),/*#__PURE__*/_jsx(\"br\",{}),\"Description: \",selectedPlace.description,/*#__PURE__*/_jsx(\"br\",{}),\"Address: \",selectedPlace.address,/*#__PURE__*/_jsx(\"br\",{}),\"Reviewed: \",selectedPlace.isReviwed?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-check\",style:{color:\"green\"}}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(Rating,{text:\"Rating\",value:selectedPlace.rating})})]}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\",style:{color:\"red\"}})]})]})})]});};var WrappedMap=withScriptjs(withGoogleMap(Map));export default WrappedMap;","map":{"version":3,"sources":["C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/src/components/DashBoard/Map/Map.jsx"],"names":["React","useEffect","useState","useHistory","useDispatch","useSelector","Image","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","Message","Loader","listSupplierProducts","MapStyles","Rating","Map","dispatch","history","selectedPlace","setSelectedPlace","supplierProductList","state","loadingProducts","loading","errorProducts","error","products","userLogin","userInfo","isAdmin","push","lat","lng","styles","map","place","latitude","longitude","url","scaledSize","window","google","maps","Size","_id","image","name","textAlign","cropSelection","fontWeight","description","address","isReviwed","color","rating","WrappedMap"],"mappings":"2UAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,KAAT,KAAsB,iBAAtB,CACA,OACIC,SADJ,CAEIC,YAFJ,CAGIC,aAHJ,CAIIC,MAJJ,CAKIC,UALJ,KAMO,mBANP,CAOA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,OAASC,oBAAT,KAAqC,kCAArC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAEd,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CACA,GAAIe,CAAAA,OAAO,CAAGhB,UAAU,EAAxB,CAHc,cAK4BD,QAAQ,CAAC,IAAD,CALpC,wCAKPkB,aALO,eAKQC,gBALR,eAOd,GAAMC,CAAAA,mBAAmB,CAAGjB,WAAW,CAAC,SAAAkB,KAAK,QAAIA,CAAAA,KAAK,CAACD,mBAAV,EAAN,CAAvC,CAPc,GAQGE,CAAAA,eARH,CAQuDF,mBARvD,CAQNG,OARM,CAQ2BC,aAR3B,CAQuDJ,mBARvD,CAQoBK,KARpB,CAQ0CC,QAR1C,CAQuDN,mBARvD,CAQ0CM,QAR1C,CAUd,GAAMC,CAAAA,SAAS,CAAGxB,WAAW,CAAC,SAAAkB,KAAK,QAAIA,CAAAA,KAAK,CAACM,SAAV,EAAN,CAA7B,CAVc,GAWNC,CAAAA,QAXM,CAWOD,SAXP,CAWNC,QAXM,CAad7B,SAAS,CAAC,UAAM,CACZ,GAAI,CAAC6B,QAAQ,CAACC,OAAV,EAAqB,CAACD,QAA1B,CAAoC,CAChCX,OAAO,CAACa,IAAR,CAAa,QAAb,EACH,CAFD,IAEO,CACHd,QAAQ,CAACJ,oBAAoB,EAArB,CAAR,CACH,CACJ,CANQ,CAMN,CAACI,QAAD,CAAWC,OAAX,CAAoBW,QAApB,CANM,CAAT,CAQA,mBACI,MAAC,SAAD,EACI,aAAa,CAAE,CAAEG,GAAG,CAAE,QAAP,CAAiBC,GAAG,CAAE,SAAtB,CADnB,CAEI,WAAW,CAAE,EAFjB,CAGI,cAAc,CAAE,CAAEC,MAAM,CAAEpB,SAAV,CAHpB,WAMQS,eAAe,cAAG,KAAC,MAAD,IAAH,CACTE,aAAa,cACT,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,UAA2BA,aAA3B,EADS,CAGPE,QAAQ,CAACQ,GAAT,CAAa,SAAAC,KAAK,qBACd,KAAC,MAAD,EAEI,QAAQ,CAAE,CACNJ,GAAG,CAAEI,KAAK,CAACC,QADL,CAENJ,GAAG,CAAEG,KAAK,CAACE,SAFL,CAFd,CAMI,OAAO,CAAE,kBAAM,CACXlB,gBAAgB,CAACgB,KAAD,CAAhB,CACH,CARL,CASI,IAAI,CAAE,CACFG,GAAG,CAAE,cADH,CAEFC,UAAU,CAAE,GAAIC,CAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,IAAvB,CAA4B,EAA5B,CAAgC,EAAhC,CAFV,CATV,EACSR,KAAK,CAACS,GADf,CADc,EAAlB,CAVpB,CA8BQ1B,aAAa,eACT,KAAC,UAAD,EACI,QAAQ,CAAE,CACNa,GAAG,CAAEb,aAAa,CAACkB,QADb,CAENJ,GAAG,CAAEd,aAAa,CAACmB,SAFb,CADd,CAKI,YAAY,CAAE,uBAAM,CAChBlB,gBAAgB,CAAC,IAAD,CAAhB,CACH,CAPL,uBASI,oCACI,KAAC,KAAD,EAAO,SAAS,CAAC,gCAAjB,CAAkD,OAAO,KAAzD,CAA0D,KAAK,CAAC,OAAhE,CAAwE,GAAG,CAAED,aAAa,CAAC2B,KAA3F,CAAkG,GAAG,CAAE3B,aAAa,CAAC4B,IAArH,EADJ,cAEI,WAAI,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAb,CAAX,UAAqC7B,aAAa,CAAC8B,aAAnD,EAFJ,cAGI,6CACY,aAAM,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAd,CAAb,UAAsC/B,aAAa,CAAC4B,IAApD,EADZ,cAC4E,aAD5E,iBAEkB5B,aAAa,CAACgC,WAFhC,cAE4C,aAF5C,aAGchC,aAAa,CAACiC,OAH5B,cAGoC,aAHpC,cAKQjC,aAAa,CAACkC,SAAd,cACO,wCACC,UAAG,SAAS,CAAC,cAAb,CAA4B,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAnC,EADD,cAEC,gCAAG,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,KAAK,CAAEnC,aAAa,CAACoC,MAA3C,EAAH,EAFD,GADP,cAMO,UAAG,SAAS,CAAC,cAAb,CAA4B,KAAK,CAAE,CAAED,KAAK,CAAE,KAAT,CAAnC,EAXf,GAHJ,GATJ,EA/BZ,GADJ,CAiEH,CAtFD,CAwFA,GAAME,CAAAA,UAAU,CAAGjD,YAAY,CAACC,aAAa,CAACQ,GAAD,CAAd,CAA/B,CAEA,cAAewC,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Image } from 'react-bootstrap'\nimport {\n    GoogleMap,\n    withScriptjs,\n    withGoogleMap,\n    Marker,\n    InfoWindow\n} from 'react-google-maps'\nimport Message from '../../Message/Message'\nimport Loader from '../../Loader/Loader'\nimport { listSupplierProducts } from '../../../actions/supplierProduct'\nimport MapStyles from './MapStyles'\nimport Rating from './Rating/Rating'\n\nconst Map = () => {\n\n    const dispatch = useDispatch()\n    let history = useHistory()\n\n    const [selectedPlace, setSelectedPlace] = useState(null)\n\n    const supplierProductList = useSelector(state => state.supplierProductList)\n    const { loading: loadingProducts, error: errorProducts, products } = supplierProductList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (!userInfo.isAdmin && !userInfo) {\n            history.push('/login')\n        } else {\n            dispatch(listSupplierProducts())\n        }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <GoogleMap\n            defaultCenter={{ lat: 6.927079, lng: 79.861244 }}\n            defaultZoom={10}\n            defaultOptions={{ styles: MapStyles }}\n        >\n            {\n                loadingProducts ? <Loader />\n                    : errorProducts\n                        ? <Message variant='danger'>{errorProducts}</Message>\n                        : (\n                            products.map(place => (\n                                <Marker\n                                    key={place._id}\n                                    position={{\n                                        lat: place.latitude,\n                                        lng: place.longitude\n                                    }}\n                                    onClick={() => {\n                                        setSelectedPlace(place)\n                                    }}\n                                    icon={{\n                                        url: '/mapIcon.svg',\n                                        scaledSize: new window.google.maps.Size(25, 25)\n                                    }}\n                                />\n                            ))\n                        )\n\n            }\n            {\n                selectedPlace && (\n                    <InfoWindow\n                        position={{\n                            lat: selectedPlace.latitude,\n                            lng: selectedPlace.longitude\n                        }}\n                        onCloseClick={() => {\n                            setSelectedPlace(null)\n                        }}\n                    >\n                        <div>\n                            <Image className=\"mx-auto d-block img-fluid mb-1\" rounded width=\"120px\" src={selectedPlace.image} alt={selectedPlace.name} />\n                            <h4 style={{ textAlign: \"center\" }}>{selectedPlace.cropSelection}</h4>\n                            <p>\n                                Farmer: <span style={{ fontWeight: \"bold\" }}>{selectedPlace.name}</span><br />\n                                Description: {selectedPlace.description}<br />\n                                Address: {selectedPlace.address}<br />\n                                Reviewed: {\n                                    selectedPlace.isReviwed\n                                        ? (<>\n                                            <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                                            <p><Rating text=\"Rating\" value={selectedPlace.rating} /></p>\n                                        </>\n                                        )\n                                        : (<i className=\"fas fa-times\" style={{ color: \"red\" }} />)\n                                }\n                            </p>\n                        </div>\n                    </InfoWindow>\n                )\n            }\n        </GoogleMap>\n\n    )\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\n\nexport default WrappedMap\n"]},"metadata":{},"sourceType":"module"}