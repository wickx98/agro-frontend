{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useEffect}from'react';import{Line}from'react-chartjs-2';import{useDispatch,useSelector}from'react-redux';import Message from'./../../../../components/Message/Message';import Loader from'./../../../../components/Loader/Loader';import{listUsers}from'./../../../../actions/userActions';var data={labels:['December','January'],datasets:[{label:'Users of Months',fill:false,lineTension:0.1,backgroundColor:'rgba(75,192,192,0.4)',borderColor:'rgba(75,192,192,1)',borderCapStyle:'butt',borderDash:[],borderDashOffset:0.0,borderJoinStyle:'miter',pointBorderColor:'rgba(75,192,192,1)',pointBackgroundColor:'#fff',pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:'rgba(75,192,192,1)',pointHoverBorderColor:'rgba(220,220,220,1)',pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:[1,4,0,8]}]};var LineChart=function LineChart(_ref){var history=_ref.history;var dispatch=useDispatch();var userList=useSelector(function(state){return state.userList;});var loading=userList.loading,error=userList.error;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;useEffect(function(){if(userInfo&&userInfo.isAdmin){dispatch(listUsers());}else{history.push('/login');}},[dispatch,history,userInfo]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{style:{marginTop:\"40px\",textAlign:\"center\"},children:\"Users\"}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsx(Line,{data:data})]});};export default LineChart;","map":{"version":3,"sources":["C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/src/components/DashBoard/Statistics/LineChart/LineChart.jsx"],"names":["React","useEffect","Line","useDispatch","useSelector","Message","Loader","listUsers","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","LineChart","history","dispatch","userList","state","loading","error","userLogin","userInfo","isAdmin","push","marginTop","textAlign"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,0CAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wCAAnB,CACA,OAASC,SAAT,KAA0B,mCAA1B,CAEA,GAAMC,CAAAA,IAAI,CAAG,CACTC,MAAM,CAAE,CAAC,UAAD,CAAa,SAAb,CADC,CAETC,QAAQ,CAAE,CACN,CACIC,KAAK,CAAE,iBADX,CAEIC,IAAI,CAAE,KAFV,CAGIC,WAAW,CAAE,GAHjB,CAIIC,eAAe,CAAE,sBAJrB,CAKIC,WAAW,CAAE,oBALjB,CAMIC,cAAc,CAAE,MANpB,CAOIC,UAAU,CAAE,EAPhB,CAQIC,gBAAgB,CAAE,GARtB,CASIC,eAAe,CAAE,OATrB,CAUIC,gBAAgB,CAAE,oBAVtB,CAWIC,oBAAoB,CAAE,MAX1B,CAYIC,gBAAgB,CAAE,CAZtB,CAaIC,gBAAgB,CAAE,CAbtB,CAcIC,yBAAyB,CAAE,oBAd/B,CAeIC,qBAAqB,CAAE,qBAf3B,CAgBIC,qBAAqB,CAAE,CAhB3B,CAiBIC,WAAW,CAAE,CAjBjB,CAkBIC,cAAc,CAAE,EAlBpB,CAmBIpB,IAAI,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAnBV,CADM,CAFD,CAAb,CA2BA,GAAMqB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAE/B,GAAMC,CAAAA,QAAQ,CAAG5B,WAAW,EAA5B,CAEA,GAAM6B,CAAAA,QAAQ,CAAG5B,WAAW,CAAC,SAAA6B,KAAK,QAAIA,CAAAA,KAAK,CAACD,QAAV,EAAN,CAA5B,CAJ+B,GAKvBE,CAAAA,OALuB,CAKJF,QALI,CAKvBE,OALuB,CAKdC,KALc,CAKJH,QALI,CAKdG,KALc,CAO/B,GAAMC,CAAAA,SAAS,CAAGhC,WAAW,CAAC,SAAA6B,KAAK,QAAIA,CAAAA,KAAK,CAACG,SAAV,EAAN,CAA7B,CAP+B,GAQvBC,CAAAA,QARuB,CAQVD,SARU,CAQvBC,QARuB,CAU/BpC,SAAS,CAAC,UAAM,CACZ,GAAIoC,QAAQ,EAAIA,QAAQ,CAACC,OAAzB,CAAkC,CAC9BP,QAAQ,CAACxB,SAAS,EAAV,CAAR,CACH,CAFD,IAEO,CACHuB,OAAO,CAACS,IAAR,CAAa,QAAb,EACH,CACJ,CANQ,CAMN,CAACR,QAAD,CAAWD,OAAX,CAAoBO,QAApB,CANM,CAAT,CAQA,mBACI,wCACI,WAAI,KAAK,CAAE,CAAEG,SAAS,CAAE,MAAb,CAAqBC,SAAS,CAAE,QAAhC,CAAX,mBADJ,CAEKP,OAAO,cAAG,KAAC,MAAD,IAAH,CACFC,KAAK,cAAG,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,UAA2BA,KAA3B,EAAH,cAEC,KAAC,IAAD,EAAM,IAAI,CAAE3B,IAAZ,EALhB,GADJ,CAWH,CA7BD,CA+BA,cAAeqB,CAAAA,SAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../../components/Message/Message'\nimport Loader from './../../../../components/Loader/Loader'\nimport { listUsers } from './../../../../actions/userActions'\n\nconst data = {\n    labels: ['December', 'January'],\n    datasets: [\n        {\n            label: 'Users of Months',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [1, 4, 0, 8]\n        }\n    ]\n};\n\nconst LineChart = ({ history }) => {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <>\n            <h4 style={{ marginTop: \"40px\", textAlign: \"center\" }}>Users</h4>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Line data={data} />\n                    )\n            }\n        </>\n    )\n}\n\nexport default LineChart\n"]},"metadata":{},"sourceType":"module"}