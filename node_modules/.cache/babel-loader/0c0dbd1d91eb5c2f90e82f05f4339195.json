{"ast":null,"code":"import _slicedToArray from\"C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{jsx as _jsx}from\"react/jsx-runtime\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: block;\\n  margin: 0 auto;\\n  border-color: green;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import{css}from\"@emotion/react\";import PuffLoader from\"react-spinners/PuffLoader\";// Can be a string as well. Need to ensure each key-value pair ends with ;\nvar override=css(_templateObject());var Loader=function Loader(){var _useState=useState(true),_useState2=_slicedToArray(_useState,1),loading=_useState2[0];var _useState3=useState(\"#24d32b\"),_useState4=_slicedToArray(_useState3,1),color=_useState4[0];return/*#__PURE__*/_jsx(\"div\",{className:\"sweet-loading\",children:/*#__PURE__*/_jsx(PuffLoader,{color:color,loading:loading,css:override,size:100})});};export default Loader;","map":{"version":3,"sources":["C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/src/components/Loader/Loader.jsx"],"names":["React","useState","css","PuffLoader","override","Loader","loading","color"],"mappings":"8nBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,GAAT,KAAoB,gBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CAEA;AACA,GAAMC,CAAAA,QAAQ,CAAGF,GAAH,mBAAd,CAMA,GAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,eAEDJ,QAAQ,CAAC,IAAD,CAFP,wCAEZK,OAFY,8BAGHL,QAAQ,CAAC,SAAD,CAHL,yCAGZM,KAHY,eAKjB,mBACI,YAAK,SAAS,CAAC,eAAf,uBACI,KAAC,UAAD,EAAY,KAAK,CAAEA,KAAnB,CAA0B,OAAO,CAAED,OAAnC,CAA4C,GAAG,CAAEF,QAAjD,CAA2D,IAAI,CAAE,GAAjE,EADJ,EADJ,CAKH,CAVD,CAYA,cAAeC,CAAAA,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport { css } from \"@emotion/react\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: green;\n`;\n\nconst Loader = () => {\n\n    let [loading] = useState(true);\n    let [color] = useState(\"#24d32b\");\n\n    return (\n        <div className=\"sweet-loading\">\n            <PuffLoader color={color} loading={loading} css={override} size={100} />\n        </div>\n    )\n}\n\nexport default Loader\n"]},"metadata":{},"sourceType":"module"}