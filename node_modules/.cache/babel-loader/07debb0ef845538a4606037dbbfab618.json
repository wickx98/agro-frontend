{"ast":null,"code":"import _slicedToArray from\"C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import{Form,Button,Row,Col,Container}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'./../../../components/Message/Message';import Loader from'./../../../components/Loader/Loader';import{getUserDetails,updateUserProfile}from'./../../../actions/userActions';import{listMyOrders}from'./../../../actions/orderAction';var EditProfile=function EditProfile(_ref){var history=_ref.history;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),cropSelection=_useState8[0],setCropSelection=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),confirmPassword=_useState10[0],setConfirmPassword=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),message=_useState12[0],setMessage=_useState12[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,user=userDetails.user,error=userDetails.error;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var userUpdateProfile=useSelector(function(state){return state.userUpdateProfile;});var success=userUpdateProfile.success;useEffect(function(){if(!userInfo){history.push('/login');}else{if(!user.name){dispatch(getUserDetails('profile'));dispatch(listMyOrders());}else{setName(user.name);setEmail(user.email);setCropSelection(user.cropSelection);}}},[userInfo,history,user,dispatch]);var submitHandler=function submitHandler(e){e.preventDefault();if(password!==confirmPassword){setMessage('Passwords do not match');}else{dispatch(updateUserProfile({id:user._id,name:name,email:email,password:password,cropSelection:cropSelection}));}};return/*#__PURE__*/_jsxs(Container,{style:{marginBottom:'50px',marginTop:'20px'},children:[message&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:message}),error&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}),success&&/*#__PURE__*/_jsx(Message,{variant:\"success\",children:\"Profile Updated!\"}),loading&&/*#__PURE__*/_jsx(Loader,{}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:5,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Name \",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,required:true,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Email Address / NIC \",/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"})]}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email or NIC\",value:email,required:true,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"cropSelection\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Crop Selection (optional)\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"cropSelection\",placeholder:\"Enter cropSelection\",value:cropSelection,onChange:function onChange(e){return setCropSelection(e.target.value);}})]})]}),/*#__PURE__*/_jsxs(Col,{md:5,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Confirm password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]})]})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]});};export default EditProfile;","map":{"version":3,"sources":["C:/Users/hasit/Desktop/Project new new/web-cw-main/web-cw-main/frontend/src/components/DashBoard/Profile/EditProfile.jsx"],"names":["React","useState","useEffect","Form","Button","Row","Col","Container","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","listMyOrders","EditProfile","history","name","setName","email","setEmail","password","setPassword","cropSelection","setCropSelection","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","user","error","userLogin","userInfo","userUpdateProfile","success","push","submitHandler","e","preventDefault","id","_id","marginBottom","marginTop","color","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n    Form,\n    Button,\n    Row,\n    Col,\n    Container,\n} from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from './../../../components/Message/Message'\nimport Loader from './../../../components/Loader/Loader'\nimport { getUserDetails, updateUserProfile } from './../../../actions/userActions'\nimport { listMyOrders } from './../../../actions/orderAction'\n\nconst EditProfile = ({ history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [cropSelection, setCropSelection] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, user, error } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user.name) {\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setCropSelection(user.cropSelection)\n            }\n        }\n    }, [userInfo, history, user, dispatch])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({ id: user._id, name, email, password, cropSelection }))\n        }\n    }\n\n    return (\n        <Container style={{ marginBottom: '50px', marginTop: '20px' }}>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {success && <Message variant='success'>Profile Updated!</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Row>\n                    <Col md={5}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"name\"\n                                placeholder=\"Enter name\"\n                                value={name}\n                                required\n                                onChange={(e) => setName(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Address / NIC <span style={{ color: 'red' }}>*</span></Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                placeholder=\"Enter email or NIC\"\n                                value={email}\n                                required\n                                onChange={(e) => setEmail(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='cropSelection'>\n                            <Form.Label>Crop Selection (optional)</Form.Label>\n                            <Form.Control\n                                type=\"cropSelection\"\n                                placeholder=\"Enter cropSelection\"\n                                value={cropSelection}\n                                onChange={(e) => setCropSelection(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </Col>\n                    <Col md={5}>\n                        <Form.Group controlId='password'>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Enter password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='confirmPassword'>\n                            <Form.Label>Confirm password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"Confirm password\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Button type=\"submit\" variant=\"primary\">Update</Button>\n            </Form>\n        </Container>\n    )\n}\n\nexport default EditProfile \n"]},"metadata":{},"sourceType":"module"}