{"ast":null,"code":"import axios from 'axios';\nimport { SUPPLIER_PRODUCT_CREATE_FAIL, SUPPLIER_PRODUCT_CREATE_REQUEST, SUPPLIER_PRODUCT_CREATE_SUCCESS, SUPPLIER_PRODUCT_LIST_MY_REQUEST, SUPPLIER_PRODUCT_LIST_MY_SUCCESS, SUPPLIER_PRODUCT_LIST_MY_FAIL, SUPPLIER_PRODUCT_LIST_REQUEST, SUPPLIER_PRODUCT_LIST_SUCCESS, SUPPLIER_PRODUCT_LIST_FAIL, SUPPLIER_PRODUCT_REQUEST, SUPPLIER_PRODUCT_SUCCESS, SUPPLIER_PRODUCT_FAIL, FARMER_PRODUCT_CREATE_REVIEW_REQUEST, FARMER_PRODUCT_CREATE_REVIEW_SUCCESS, FARMER_PRODUCT_CREATE_REVIEW_FAIL, SUPPLIER_PRODUCT_UPDATE_FAIL, SUPPLIER_PRODUCT_UPDATE_REQUEST, SUPPLIER_PRODUCT_UPDATE_SUCCESS, SUPPLIER_PRODUCT_FOR_ALL_REQUEST, SUPPLIER_PRODUCT_FOR_ALL_SUCCESS, SUPPLIER_PRODUCT_FOR_ALL_FAIL } from './../constants/supplierConstant';\nimport { logout } from './userActions';\nexport const createSupplierProduct = ({\n  name,\n  email,\n  address,\n  cropSelection,\n  storage,\n  image,\n  phonenumber,\n  description\n}) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SUPPLIER_PRODUCT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/supplier', {\n      name,\n      email,\n      address,\n      cropSelection,\n      storage,\n      image,\n      phonenumber,\n      description\n    }, config);\n    dispatch({\n      type: SUPPLIER_PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SUPPLIER_PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyProducts = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SUPPLIER_PRODUCT_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/supplier/myproducts`, config);\n    dispatch({\n      type: SUPPLIER_PRODUCT_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: SUPPLIER_PRODUCT_LIST_MY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listSupplierProducts = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SUPPLIER_PRODUCT_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/supplier`, config);\n    dispatch({\n      type: SUPPLIER_PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: SUPPLIER_PRODUCT_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const getroductsDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SUPPLIER_PRODUCT_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/supplier/product/${id}`, config);\n    dispatch({\n      type: SUPPLIER_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SUPPLIER_PRODUCT_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FARMER_PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/supplier/product/${productId}/reviews`, review, config);\n    dispatch({\n      type: FARMER_PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: FARMER_PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateReviewed = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SUPPLIER_PRODUCT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/supplier/product/${product._id}/reviews`, product, config);\n    dispatch({\n      type: FARMER_PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n    dispatch({\n      type: SUPPLIER_PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SUPPLIER_PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateSupplierProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SUPPLIER_PRODUCT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/supplier/product/${product._id}/edit`, product, config);\n    dispatch({\n      type: SUPPLIER_PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SUPPLIER_PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // For all\n\nexport const listSupplierProductsForAll = () => async dispatch => {\n  try {\n    dispatch({\n      type: SUPPLIER_PRODUCT_FOR_ALL_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/supplier/all`);\n    dispatch({\n      type: SUPPLIER_PRODUCT_FOR_ALL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: SUPPLIER_PRODUCT_FOR_ALL_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["E:/web site/web-cw-main/web-cw-main/web-cw-main/frontend/src/actions/supplierProduct.js"],"names":["axios","SUPPLIER_PRODUCT_CREATE_FAIL","SUPPLIER_PRODUCT_CREATE_REQUEST","SUPPLIER_PRODUCT_CREATE_SUCCESS","SUPPLIER_PRODUCT_LIST_MY_REQUEST","SUPPLIER_PRODUCT_LIST_MY_SUCCESS","SUPPLIER_PRODUCT_LIST_MY_FAIL","SUPPLIER_PRODUCT_LIST_REQUEST","SUPPLIER_PRODUCT_LIST_SUCCESS","SUPPLIER_PRODUCT_LIST_FAIL","SUPPLIER_PRODUCT_REQUEST","SUPPLIER_PRODUCT_SUCCESS","SUPPLIER_PRODUCT_FAIL","FARMER_PRODUCT_CREATE_REVIEW_REQUEST","FARMER_PRODUCT_CREATE_REVIEW_SUCCESS","FARMER_PRODUCT_CREATE_REVIEW_FAIL","SUPPLIER_PRODUCT_UPDATE_FAIL","SUPPLIER_PRODUCT_UPDATE_REQUEST","SUPPLIER_PRODUCT_UPDATE_SUCCESS","SUPPLIER_PRODUCT_FOR_ALL_REQUEST","SUPPLIER_PRODUCT_FOR_ALL_SUCCESS","SUPPLIER_PRODUCT_FOR_ALL_FAIL","logout","createSupplierProduct","name","email","address","cropSelection","storage","image","phonenumber","description","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","listMyProducts","get","listSupplierProducts","getroductsDetails","id","createProductReview","productId","review","updateReviewed","product","put","_id","updateSupplierProduct","listSupplierProductsForAll"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n    SUPPLIER_PRODUCT_CREATE_FAIL,\n    SUPPLIER_PRODUCT_CREATE_REQUEST,\n    SUPPLIER_PRODUCT_CREATE_SUCCESS,\n    SUPPLIER_PRODUCT_LIST_MY_REQUEST,\n    SUPPLIER_PRODUCT_LIST_MY_SUCCESS,\n    SUPPLIER_PRODUCT_LIST_MY_FAIL,\n    SUPPLIER_PRODUCT_LIST_REQUEST,\n    SUPPLIER_PRODUCT_LIST_SUCCESS,\n    SUPPLIER_PRODUCT_LIST_FAIL,\n    SUPPLIER_PRODUCT_REQUEST,\n    SUPPLIER_PRODUCT_SUCCESS,\n    SUPPLIER_PRODUCT_FAIL,\n    FARMER_PRODUCT_CREATE_REVIEW_REQUEST,\n    FARMER_PRODUCT_CREATE_REVIEW_SUCCESS,\n    FARMER_PRODUCT_CREATE_REVIEW_FAIL,\n    SUPPLIER_PRODUCT_UPDATE_FAIL,\n    SUPPLIER_PRODUCT_UPDATE_REQUEST,\n    SUPPLIER_PRODUCT_UPDATE_SUCCESS,\n    SUPPLIER_PRODUCT_FOR_ALL_REQUEST,\n    SUPPLIER_PRODUCT_FOR_ALL_SUCCESS,\n    SUPPLIER_PRODUCT_FOR_ALL_FAIL\n} from './../constants/supplierConstant'\nimport { logout } from './userActions'\n\nexport const createSupplierProduct = ({\n    name,\n    email,\n    address,\n    cropSelection,\n    storage,\n    image,\n    phonenumber,\n    description\n}) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SUPPLIER_PRODUCT_CREATE_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.post(\n            '/api/supplier',\n            {\n                name,\n                email,\n                address,\n                cropSelection,\n                storage,\n                image,\n                phonenumber,\n                description\n            },\n            config\n        )\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SUPPLIER_PRODUCT_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const listMyProducts = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SUPPLIER_PRODUCT_LIST_MY_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/supplier/myproducts`, config)\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_LIST_MY_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: SUPPLIER_PRODUCT_LIST_MY_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const listSupplierProducts = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SUPPLIER_PRODUCT_LIST_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/supplier`, config)\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: SUPPLIER_PRODUCT_LIST_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const getroductsDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: SUPPLIER_PRODUCT_REQUEST })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/supplier/product/${id}`, config)\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: SUPPLIER_PRODUCT_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({\n            type: FARMER_PRODUCT_CREATE_REVIEW_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        await axios.post(`/api/supplier/product/${productId}/reviews`, review, config)\n\n        dispatch({\n            type: FARMER_PRODUCT_CREATE_REVIEW_SUCCESS,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: FARMER_PRODUCT_CREATE_REVIEW_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const updateReviewed = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SUPPLIER_PRODUCT_UPDATE_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/supplier/product/${product._id}/reviews`, product, config)\n\n        dispatch({ type: FARMER_PRODUCT_CREATE_REVIEW_SUCCESS })\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SUPPLIER_PRODUCT_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const updateSupplierProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SUPPLIER_PRODUCT_UPDATE_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n\n        const { data } = await axios.put(`/api/supplier/product/${product._id}/edit`, product, config)\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SUPPLIER_PRODUCT_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\n// For all\nexport const listSupplierProductsForAll = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: SUPPLIER_PRODUCT_FOR_ALL_REQUEST,\n        })\n\n        const { data } = await axios.get(`/api/supplier/all`)\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_FOR_ALL_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n\n        dispatch({\n            type: SUPPLIER_PRODUCT_FOR_ALL_FAIL,\n            payload: message,\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}